package data

import (
	"io"
	"encoding/json"
	"log" // to log errors, tell you what is wrong
	"net/http" // package to use http, make onto a website
)

func FetchAllRecipes(){
	jsonInfo, err := http.Get("https://api.npoint.io/fff0f131782057b16a12") //err for error its a type shorthand, http.get gets information from given url and puts into variable
	//url is autogenerated from json file , npoint lets your create json files
	if err != nil {
		log.Fatal(err, "ERROR: problem with url") //kill the code if error, string to let you know what err
	}

	defer jsonInfo.Body.Close() // whatever error this line of code will always run at the end
		// to read data you open but have to close will crash if you dont , always happens as a last thing even without the error
	body, err := io.ReadAll(jsonInfo.Body) //opens and reads converts to slice of bytes to better process that information as computer readable 

	if err != nil {
		log.Fatal(err, "ERROR: problem reading data") // let you know what error
	}

	json.Unmarshal(body, &AllRecipes)// takes a set of bytes (body) and location to put data in (&, address of AllRecipes)
		// will insert the information into the struct, convert json info (unpackaging) into the body
	}